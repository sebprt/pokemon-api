name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: api_platform_test
          POSTGRES_USER: api_platform
          POSTGRES_PASSWORD: api_platform
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    env:
      DATABASE_URL: "postgresql://api_platform:api_platform@localhost:5432/api_platform_test?serverVersion=13&charset=utf8"

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, pdo, pdo_pgsql
          ini-values: post_max_size=256M, upload_max_filesize=256M, memory_limit=1G
          coverage: none

      - name: Cache Composer dependencies
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-suggest --no-interaction

      - name: Create .env.local
        run: echo 'DATABASE_URL=${{ secrets.DATABASE_URL }}' > .env.local

      - name: Run database migrations
        run: |
          if php bin/console doctrine:migrations:up-to-date; then
            echo "No migrations to run."
          else
            php bin/console doctrine:migrations:migrate --no-interaction
          fi

      - name: Run PHPStan
        run: vendor/bin/phpstan analyse

      - name: Run PHPUnit tests
        run: vendor/bin/phpunit --testdox

      - name: Run PHP CS Fixer
        run: vendor/bin/php-cs-fixer fix --dry-run --diff
